name: thisisnabi.dev

env:
  DOTNET_VERSION: '8'
  
on:
  push:
    branches: [ "main" ]

jobs:
  analyze:

    name: analyze
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: ['csharp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 5

    - run: git checkout HEAD^2
      if: ${{ github.event_name == 'pull_request' }}

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
 
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v3

    - name: Set up .NET 
      uses: actions/setup-dotnet@v3
      with: 
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Nuget packages
      run: dotnet restore

    - name: Build 
      run: dotnet build --no-restore
      
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v3

    - name: Set up .NET 
      uses: actions/setup-dotnet@v3
      with: 
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Nuget packages
      run: dotnet restore
      
    - name: Test 
      run: dotnet test
      
  deploy:
  
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸšš Get latest code
      uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
          node-version: "18"
    - name: update-liara
      env:
        LIARA_TOKEN: ${{ secrets.LIARA_API_TOKEN }}
      run: |
          npm i -g @liara/cli@5
          liara deploy --api-token="$LIARA_TOKEN" --no-app-logs
